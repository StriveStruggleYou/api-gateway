server {
  listen 8100 default_server;
  server_name "" [::]:8100;
  resolver 127.0.0.1:8600;
  header_filter_by_lua_file "$api_gateway_root/src/nginx/scripts/add_cors_headers.lua";

  access_log /var/log/nginx/api-gateway.access.log log_format_with_perf;
  error_log /var/log/nginx/api-gateway.error.log;

  set_by_lua_file $stripped_uri "$api_gateway_root/src/nginx/scripts/strip_service_name_from_uri.lua";

  location /healthcheck {
    content_by_lua 'ngx.say("OK")';
  }

  location ~ ^/(helios|auth)/(register|users|facebook/users) {
    limit_req zone=registration burst=2 nodelay;
    proxy_pass_request_headers off;
    content_by_lua '
      local router = require("nginx/router")
      return router.route()
      ';
  }

  location / {
    rewrite ^/service/(.*)$ /$1 break;
    proxy_pass_request_headers off;
    content_by_lua '
      local router = require("nginx/router")
      return router.route()
      ';
  }

  location @service {
    set_by_lua $upstream '
      local upstream = require("upstream")
      return upstream.find(ngx.var.request_uri);
    ';

    proxy_pass http://$upstream/$stripped_uri;
  }
}
