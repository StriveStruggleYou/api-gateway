include "../production/upstreams.conf";

server {
  listen 8100 default_server;
  server_name "" [::]:8100;

  access_log logs/api-gateway.access.log log_format_with_perf;
  error_log logs/api-gateway.error.log;

  location /healthcheck {
    proxy_pass http://prod_helios/heartbeat;
  }

  location /helios/token {
    proxy_pass http://prod_helios/token;
  }

  location /helios/register {
    limit_req zone=registration burst=2 nodelay;
    proxy_pass http://prod_helios/register;
  }

  location / {
    rewrite ^/service/(.*)$ /$1 break;
    proxy_pass_request_headers off;
    content_by_lua '
      local config = require("config")
      local nginx = require("nginx")
      local app = nginx.init(config)

      local headers = ngx.req.get_headers(20)
      local user_id = nginx.authenticate(app, headers["Cookie"])
      return nginx.service_proxy(ngx, user_id)
      ';
  }

  location @service {
    set_by_lua $upstream '
      local util = require("util")
      local upstream = require("upstream")

      return upstream.find(ngx.var.request_uri);
    ';

    set_by_lua $stripped_uri '
      local util = require("util")

      --strip the service name prefix
      local stripped_uri = util.get_rest_after_url_prefix(ngx.var.request_uri)

      -- remove leading / so that there is no duplication of / when proxy pass is set to http://$x/$stripped_uri
      return util.strip_leading_slash(stripped_uri)
    ';
    proxy_pass http://$upstream/$stripped_uri;
  }
}
