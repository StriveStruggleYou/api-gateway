server {
  listen 8100 default_server;
  server_name "" [::]:8100;
  resolver 127.0.0.1:8600;

  access_log /var/log/nginx/api-gateway.access.log log_format_with_perf;

  location /healthcheck {
    set_by_lua $helios '
      local util = require("util")
      return util.strip_trailing_slash(require("config").HELIOS_URL)
    ';
    proxy_pass $helios/heartbeat;
  }

  # backwards compatibility; remove when VCL changes to point to 8200
  location /helios/token {
    proxy_pass http://localhost:8200/helios/token;
  }

  location / {
    rewrite ^/service/(.*)$ /$1 break;
    proxy_pass_request_headers off;
    set $service_path $1;
    content_by_lua '
      local config = require("config")
      local nginx = require("nginx")
      local app = nginx.init(config)

      local headers = ngx.req.get_headers(20)
      local user_id = nginx.authenticate(app, headers["Cookie"])
      return nginx.service_proxy(ngx, user_id)
      ';
  }

  location  @service {
    set_by_lua $service_lb_url '
      local util = require("util")

      return util.strip_trailing_slash(require("config").SERVICE_LB_URL)
    ';

    proxy_pass $service_lb_url;
  }

}

server {
  listen 8200 default_server;
  server_name "" [::]:8200;
  resolver 127.0.0.1:8600;

  access_log /var/log/nginx/api-gateway.access.log log_format_with_perf;

  location / {
    set_by_lua $helios '
      local util = require("util")
      return util.strip_trailing_slash(require("config").HELIOS_URL)
    ';

    rewrite ^/healthcheck$ /heartbeat break;
    proxy_pass $helios;
  }
}
