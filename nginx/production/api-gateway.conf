server {
  listen 8100 default_server;
  server_name "" [::]:8100;

  location /healthcheck {
    content_by_lua '
      local config = require("config")
      local nginx = require("nginx")
      local app = nginx.init(config)

      nginx.healthcheck(app)
      ';
  }

  location /proxy/healthcheck {
    set_by_lua $helios 'return require("config").HELIOS_URL';
    proxy_pass $helios/heartbeat;
  }

  location ~ /helios/(.*) {
    # If we decide to use DNS for the HELIOS_URL we'll need to set a resolver
    # here. That could either be done statically with the resolver directive or
    # via lua using https://github.com/openresty/lua-resty-dns
    set_by_lua $helios 'return require("config").HELIOS_URL';
    proxy_pass $helios/$1;
  }

  location ~ /service/(.*) {
    resolver 127.0.0.1:8600;
    set_by_lua $lb 'return require("config").SERVICE_LB_URL';
    set_by_lua $authenticated_user_id '
      local config = require("config")
      local nginx = require("nginx")
      local app = nginx.init(config)

      local user_id = nginx.authenticate(app.auth, ngx.req.get_headers(20)["Cookie"])
      return user_id;
    ';
    proxy_set_header X-Wikia-UserId $authenticated_user_id;
    proxy_pass $lb/$1;
  }

}
